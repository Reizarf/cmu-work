;   PENTOMINOES

;   AUTHOR          : ROBERT E. ULSHAFER, 1978 (APPROXIMATE)
;   APPLEFICATION   : ROGER NACE, 1980 (APPROXIMATE)
;   TLB CONVERSION  : WAYNE WALL, 2020

    .DEF    CR     = $0D    ;<CR> CHARACTER
    .DEF    CTRLC  = $03    ;<CTRL-C> CHARACTER
    .DEF    CRLF   = $0D0A  ;<CR><LF> PAIR
    .DEF    STPAGE = $800   ;STARTING PAGE

    .LOC    $02             ;PAGE 0

PC:     .BYTE   0           ;PIECE NUMBER
IMPT:   .BYTE   0           ;POINTS TO PIECE IMAGE
PCPT:   .WORD   PC01        ;BASE ADDRESS OF PIECE DATA
PCDAT:  .WORD   0           ;HOLDS PIECE-IMAGE DATA
TPDAT:  .WORD   0           ;TEMP WORKING DATA
ROW:    .BYTE   0           ;ROW POSITION OF PIECE
COL:    .BYTE   0           ;COL POSITION OF PIECE
SUB:    .BYTE   0           ;SUBSCRIPT OF THE POSITION OF THE PIECE
RREL:   .BYTE   0           ;RELATIVE POSITION OF A CELL IN THE PIECE
CREL:   .BYTE   0
RABS:   .BYTE   0           ;ABSOLUTE POSITION OF A CELL IN THE BOX
CABS:   .BYTE   0   
RMAX:   .BYTE   0           ;NUMBER OF ROWS IN THE BOX
CMAX:   .BYTE   0           ;NUMBER OF COLUMNS IN THE BOX
SMAX:   .BYTE   0           ;NUMBER OF CELLS IN THE BOX (COMPUTED)
CCNT:   .BYTE   0           ;COL COUNTER (TO DECODE PIECE INFO)
DELDEF: .BYTE   $1          ;DELAY DEFINITION
YBUF:   .BYTE   0           ;HANDY BUFFER FOR Y
HINIT:  .BYTE   0           ;INITIAL HORIZ COOR
VINIT:  .BYTE   0           ;INITIAL VERT COOR
VCURS:  .BYTE   0           ;VERTICAL ROW NUMBER (0,1,2,...)
HCURS:  .BYTE   0           ;HORIZONTAL COL NUMBER (0,1,2,...)
LASTKY: .BYTE   0           ;HOLDS THE LAST KEY STRUCK

    .DEF    MESLO = HINIT
    .DEF    MESHI = VINIT

SABS:   .LOC    .+5         ;ABSOLUTE SUBSCRIPT OF CELLS OF PIECE IN BOX

    .DEF    ENDZER=.        ;END OF PAGE 0

    .PAGE

    .LOC    STPAGE          ;START HERE

XSTART: JMP     KSTART      ;SETUP PAGE 0
START:  JSR     CONINI      ;INIT CONSOLE I/O
        JSR     CONINO
        LDY#    $0          ;PRIME THE MESSAGE POINTERS
        LDA#    <MESS
        STA     MESLO
        LDA#    >MESS
        STA     MESHI
TOUT:   INY                 ;NEXT MESSAGE BYTE
        BNE     TOUT1       ;MESSAGE WRAP?
        INC     MESHI       ;IF SO, GO TO NEXT MESSAGE PAGE
TOUT1:  LDA@Y   MESLO       ;GET THE BYTE
        BEQ     GPAR        ;NULL ENDS PRINT
        JSR     TVOUT       ;GO PRINT THE BYTE
        JMP     TOUT        ;LOOP FOR MORE
GPAR:   JSR     GETCHR      ;ACCEPT FROM KB
        PHA                 ;SAVE CHARACTER ENTERED
        JSR     GETCHR      ;WAIT FOR CONTINUATION CHARACTER
        PLA                 ;GET FIRST CHARACTER ENTERED
        CMP#    'A          ;CHECK FOR A-D
        BMI     START       ;RE-PROMPT IF NOT ONE OF THESE
        CMP#    'E
        BPL     START
        AND#    $0F         ;MAKE NUMERIC
        CLC
        ROLA                ;X4 IS INDEX
        ROLA
        TAY
        LDAY    STAB        ;GET START H&V
        STA     HINIT
        INY
        LDAY    STAB
        STA     VINIT
        INY
        LDAY    STAB        ;GET BOX SIZE
        STA     RMAX
        INY
        LDAY    STAB
        STA     CMAX
        LDA#    $FF         ;START WITH PIECE NUMBER OF -1
        STA     PC
        CLC
        LDA#    $0          ;SET RUNNING SUM TO ZERO
        LDX     RMAX        ;COMPUTE BOX SIZE BY ADDING UP COLUMN SIZES
ML1:    DEX
        BMI     ML1D
        ADC     CMAX
        BNE     ML1
ML1D:   STA     SMAX        ;NUMBER OF BYTES IN THE BOX
        TAX
        LDA#    0
CL1:    DEX                 ;ZERO ALL BYTES IN THE BOX
        STAX    BOX
        BNE     CL1
CL1D:   LDYX    PCTBL       ;ZERO FIRST BYTE OF EACH PIECE
        STY     PCPT
        TAY
        STA@Y   PCPT
        INX
        CPX#    12
        BNE     CL1D
        LDY#    CNTEND - COUNT  ;ZERO THE "COUNT" TABLE
CCL:    STAY    COUNT
        DEY
        BPL     CCL
        JSR     INITGR
        
    .PAGE
        
NXTPC:  INC     PC          ;INCREMENT PIECE NUMBER
        LDY     PC
        CPY#    12
        BNE     NXTOK
        JMP     ANSWER      ;PLACED ALL PIECES!
NXTOK:  LDAY    PCTBL       ;POINT TO NEXT PIECE IMAGE      
        STA     PCPT
        LDY#    0
        LDA@Y   PCPT
        BMI     NXTPC       ;NO MORE IMAGES, MOVE TO NEXT PIECE
        INY
        STY     IMPT        ;OFFSET TO NEXT PIECE IMAGE
NXTIM:  LDA#    0           ;START AT UPPER LEFT CORNER OF BOX
        STA     ROW
        STA     COL
        STA     SUB
GETIM:  LDY     IMPT
        INY
        LDA@Y   PCPT
        BNE     SBK
        JMP     BACK
SBK:    STA     PCDAT
        INY
        LDA@Y   PCPT
        STA     PCDAT+1
        STY     IMPT

    .PAGE
        
TRY:    LDY#    0
        STY     RREL
        STY     CREL
        LDA#    5
        STA     CCNT
        LDA     PCDAT
        STA     TPDAT
        LDA     PCDAT+1
        STA     TPDAT+1
SHIFT:  ASL     TPDAT+1
        ROL     TPDAT
        BCC     CINC
        CLC
        LDA     COL
        ADC     CREL
        STA     CABS
        CMP     CMAX
        BPL     DOWN
        CLC
        LDA     ROW
        ADC     RREL
        STA     RABS
        CMP     RMAX
        BPL     NXTIM
        CLC
        TAX
        LDA#    0
MLP:    DEX
        BMI     MLD
        ADC     CMAX
        BNE     MLP
MLD:    ADC     CABS
        STAY    SABS
        TAX
        LDAX    BOX
        BNE     RIGHT
        INY
        CPY#    5
        BEQ     FIT
CINC:   INC     CREL
        LDA     CREL
        CMP     CCNT
        BMI     SHIFT
        DEC     CCNT
        BMI     DONE
        INC     RREL
        LDA#    0
        STA     CREL
        BEQ     SHIFT
        
    .PAGE
    
RIGHT:  INC     COL
        INC     SUB
        JMP     TRY
DONE:   JMP     STPAGE
DOWN:   LDY     COL
DL:     CPY     CMAX
        BEQ     DD
        INC     SUB
        INY
        BNE     DL
DD:     INC     ROW
        LDA#    0
        STA     COL
        JMP     TRY

FIT:    LDA     PC
        CLC
        ADC#    'A
        LDY#    5
FLP:    LDXY    SABS-1
        STAX    BOX
        DEY
        BNE     FLP
        LDA     IMPT
        STA@Y   PCPT
        INY
        LDA     SUB
        STA@Y   PCPT
        JSR     CNTIT
        JMP     CHECK
DELAY:  CLC
        SBC#    0
        BNE     DLY
        RTS
DLY:    LDY#    $80
DLY1:   LDX#    0
DLY2:   DEX
        BNE     DLY2
        DEY
        BNE     DLY1
        JMP     DELAY
        
    .PAGE
    
BACK:   LDY#    0
        TYA
        STA@Y   PCPT
BACK1:  DEC     PC
        BMI     DONE
        LDX     PC
        LDAX    PCTBL
        STA     PCPT
        LDY#    0
        STY     ROW
        LDA@Y   PCPT
        BMI     BACK1
        TAX
        DEX
        DEX
        STX     IMPT
        INY
        LDA@Y   PCPT
        STA     SUB
BL:     CMP     CMAX
        BMI     BD
        SEC
        SBC     CMAX
        INC     ROW
        BNE     BL
BD:     STA     COL
        JSR     REMOVE
        INC     COL
        INC     SUB
        JMP     GETIM

ANSWER: JSR     SHOW
        JSR     WAITL
        JSR     REMOVE
        JMP     RIGHT

    .PAGE
    
CHECK:  JSR     CONICK      ;CHARACTER AVAILABLE FROM KEYBOARD?
        BCS     CHEC00      ;BRANCH IF NO 
        STA     LASTKY      ;REMBER FOR LATER USE      
CHEC00: LDA     LASTKY      ;GET LAST CHARACTER TYPED
        CMP#    'R          ;RESTART ON 'R' 
        BNE     CHEC01
        JMP     START
CHEC01: CMP#    CTRLC       ;IS ^C?
        BNE     CHEC02
        JMP     LEAVE       ;GO RESTART
CHEC02: CMP#    'M          ;MANUAL MODE ON 'M'
        BNE     CHEC03
        JSR     SHOW        ;SHOW THE CONFIGURATION
        JSR     GETCHR      ;WAIT FOR A CHARACTER TO BE STRUCK
CHEC03: STA     DELDEF
        AND#    $7
        CMP#    0
        BEQ     NOSHOW
        JSR     DELAY
        JSR     SHOW
NOSHOW: LDA#    0
        STA     CCNT
        TAY
CHKSL:  LDXY    BOX
        BEQ     CHKSD
        INY
        CPY     SMAX
        BMI     CHKSL
CHCL:   DEY
        BMI     CHCD
        LDXY    BOX
        CPX#    'A
        BPL     CHCL
        INC     CCNT
        STAY    BOX
        BPL     CHCL

CHCD:   LDA     CCNT
        BEQ     ANSWER
        JMP     NXTPC

CHKSD:  PHA

    .PAGE
    
MARK:   STY     SABS
        LDA#    1
        STAY    BOX
        INC     CCNT
        TYA
        SEC
GCL:    CMP     CMAX
        BMI     GCD
        SBC     CMAX
        BNE     GCL
GCD:    STA     CABS
        SEC
        LDA     SABS
        SBC     CMAX
        BMI     DIR2
        TAY
        LDXY    BOX
        BNE     DIR2
        PHA
DIR2:   LDX     CABS
        DEX
        BMI     DIR3
        LDY     SABS
        DEY
        LDXY    BOX
        BNE     DIR3
        TYA
        PHA
DIR3:   LDA     SABS
        CLC
        ADC     CMAX
        CMP     SMAX
        BPL     DIR4
        TAY
        LDXY    BOX
        BNE     DIR4
        PHA
DIR4:   LDY     CABS
        INY
        CPY     CMAX
        BPL     GETSUB
        LDY     SABS
        INY
        LDXY    BOX
        BNE     GETSUB
        TYA
        PHA
        
    .PAGE
    
GETSUB: PLA
        BEQ     CHKDN
        TAY
        LDXY    BOX
        BNE     GETSUB
        BEQ     MARK
CHKDN:  SEC
        LDA     CCNT
SUBSUB: SBC#    5
        BEQ     CHKAGN
        BPL     SUBSUB
        JSR     REMOVE
        JMP     RIGHT
CHKAGN: JMP     NOSHOW

    .PAGE
    
SHOW:   JSR     XHOMEC
        LDY#    0
SRE:    LDX#    0
SL:     LDAY    BOX
        BNE     SHO
        LDA#    '           ;SPACE
SHO:    JSR     PLOTC
        INY
        INX
        CPX     CMAX
        BNE     SL
        INC     VCURS       ;BUMP LINE
        LDA     HINIT
        STA     HCURS
        JSR     SETCUR
        CPY     SMAX
        BNE     SRE
        LDA#    0           ;POSITION FOR COUNTER
        STA     HCURS
        LDA#    0
        STA     VCURS
        JSR     SETCUR
        LDX#    3
DISNL:  LDAX    COUNT
        TAY
        LSRA
        LSRA
        LSRA
        LSRA
        ORA#    $30
        JSR     TVOUT
        TYA
        AND#    $F
        ORA#    $30
        JSR     TVOUT
        DEX
        BPL     DISNL
        RTS

WAITL:  JSR     GETCHR      ;WAIT FOR A CARRIAGE RETURN...
        CMP#    CR
        BNE     WAITL
        JSR     GETCHR      ;WAIT FOR ANOTHER KEY TO RESUME.
        RTS

GETCHR: JSR     CONINP      ;GET A KB BYTE
        STA     LASTKY      ;REMEMBER FOR LATER USE
        CMP#    CTRLC       ;CHECK FOR ^C
        BNE     GETC00      ;NO
        JMP     LEAVE       ;GO BACK THRU RESTART
GETC00: RTS                 ;GO BACK WITH CHAR IN A

    .PAGE
    
REMOVE: LDA PC
        CLC
        ADC#    'A
        STA     TPDAT
        LDY     SMAX
        LDA#    0
REML:   DEY
        BMI     REMD
        LDXY    BOX
        CPX#    'A
        BMI     REMC
        CPX     TPDAT
        BNE     REML
REMC:   STAY    BOX
        JMP     REML
REMD:   INY
        STA@Y   PCPT
        RTS
CNTIT:  LDX     PC
        INX
        TXA
        ASLA
        ASLA
        TAX
        SED
CNTL1:  SEC
CNTL2:  LDAX    COUNT
        ADC#    0
        STAX    COUNT
        INX
        BCS     CNTL2
        CPX#    4
        BNE     CNTL3
        JMP     STPAGE
CNTL3:  BMI     CNTL4
        LDX#    0
        BEQ     CNTL1
CNTL4:  CLD
        RTS

TVOUT:  AND#    $7F         ;ASCII 7-BIT CHAR
        JMP     CONOUT      ;* PJMP * OUTPUT TO CONSOLE

XHOMEC: LDA     VINIT
        STA     VCURS
        LDA     HINIT
        STA     HCURS
        JSR     SETCUR
        RTS
        
SETCUR: LDA     VCURS       ;SET THE CURSOR POSITION
        LDX     HCURS
        JMP     CONCUR      ;* PJMP * CALL BIOS

INITGR: JSR     CONCLR      ;HOME AND ERASE CONSOLE
        RTS

PLOTC:  JSR     CONOUT      ;DISPLAY SYMBOL ON CONSOLE
        RTS

LEAVE:  JSR     CONCLR      ;CLEAR SCREEN
        JMP@    RESADDR     ;ENTER DEBUGGER

    .PAGE
    
COUNT:  .WORD   0
        .WORD   0
CNT0:   .WORD   0
        .WORD   0
CNT1:   .WORD   0
        .WORD   0
CNT2:   .WORD   0
        .WORD   0
CNT3:   .WORD   0
        .WORD   0
CNT4:   .WORD   0
        .WORD   0
CNT5:   .WORD   0
        .WORD   0
CNT6:   .WORD   0
        .WORD   0
CNT7:   .WORD   0
        .WORD   0
CNT8:   .WORD   0
        .WORD   0
CNT9:   .WORD   0
        .WORD   0
CNT10:  .WORD   0
        .WORD   0
CNT11:  .WORD   0
        .WORD   0
CNTEND: .WORD   0
        .WORD   0

PCTBL:  .BYTE   PC03
        .BYTE   PC02
        .BYTE   PC01
        .BYTE   PC04
        .BYTE   PC05
        .BYTE   PC06
        .BYTE   PC07
        .BYTE   PC08
        .BYTE   PC09
        .BYTE   PC10
        .BYTE   PC11
        .BYTE   PC12

    .PAGE
    
MESS:   .BYTE   0
        .ASCII  '        WELCOME TO PENTOMINOES'
        .WORD   CRLF
        .ASCII  'PLEASE CHOOSE ONE OF THE FOLLOWING:'
        .WORD   CRLF
        .ASCII  '   A - 3 BY 20'
        .WORD   CRLF
        .ASCII  '   B - 4 BY 15'
        .WORD   CRLF
        .ASCII  '   C - 5 BY 12'
        .WORD   CRLF
        .ASCII  '   D - 6 BY 10'
        .WORD   CRLF
        .ASCII  "DURING PROCESSING,  TYPE:"
        .WORD   CRLF
        .ASCII  '   1 TO 7 - SPEED CONTROL'
        .WORD   CRLF
        .ASCII  '   0 - HOLDS DISPLAY (CALCULATIONS'
        .WORD   CRLF
        .ASCII  '                      CONTINUE)
        .WORD   CRLF
        .ASCII  "   R - RETURN TO THIS MENU"
        .WORD   CRLF
        .ASCII  "   M - ENTER MANUAL MODE"
        .WORD   CRLF
        .ASCII  "   'RETURN THEN ANOTHER KEY' CONTINUES FROM SOLUTION"
        .WORD   CRLF
        .ASCII  'PLEASE TYPE A, B, C, OR D FOLLOWED BY ANOTHER KEY: '
        .BYTE   0

    .PAGE
    
    .LOC    . + $100 - <.
    
PC01:   .WORD   0
        .WORD   $2047
        .BYTE   0
        
PC02:   .WORD   0
        .WORD   $F8
        .WORD   $4A84
        .BYTE   0
        
PC03:   .WORD   0
        .WORD   $40E4
        .WORD   0
        .WORD   $7084
        .WORD   $7021
        .BYTE   0
        
PC04:   .WORD   0
        .WORD   $4066
        .WORD   $6023
        .WORD   $10C3
        .WORD   $3086
        .BYTE   0
        
PC05:   .WORD   0
        .WORD   $4087
        .WORD   $20E2
        .WORD   $1027
        .WORD   $7042
        .BYTE   0
        
PC06:   .WORD   0
        .WORD   $4027
        .WORD   $6062
        .WORD   $1087
        .WORD   $30C2
        .BYTE   0
        
PC07:   .WORD   0
        .WORD   $E5
        .WORD   $A7
        .WORD   $60C4
        .WORD   $60C2
        .BYTE   0
        
PC08:   .WORD   0
        .WORD   $F4
        .WORD   $80F0
        .WORD   $8087
        .WORD   $8017
        .WORD   $48C4
        .WORD   $24C2
        .WORD   $4C84
        .WORD   $2C42
        .BYTE   0
        
PC09:   .WORD   0
        .WORD   $F2
        .WORD   $F1
        .WORD   $8047
        .WORD   $8027
        .WORD   $4886
        .WORD   $6884
        .WORD   $2446
        .WORD   $6442
        .BYTE   0
        
PC10:   .WORD   0
        .WORD   $76
        .WORD   $37
        .WORD   $80E1
        .WORD   $80C3
        .WORD   $4846
        .WORD   $6842
        .WORD   $2486
        .WORD   $6484
        .BYTE   0
        
PC11:   .WORD   0
        .WORD   $4047
        .WORD   $2066
        .WORD   $20C3
        .WORD   $2087
        .WORD   $2027
        .WORD   $6043
        .WORD   $1047
        .WORD   $3046
        .BYTE   0
        
PC12:   .WORD   0
        .WORD   $E6
        .WORD   $E3
        .WORD   $C7
        .WORD   $67
        .WORD   $40C6
        .WORD   $20C6
        .WORD   $6086
        .WORD   $6046
        .BYTE   0

BOX:    .LOC    .+70

    .PAGE

;TABLE  FOR 'HOME' AND BOX SIZE

STAB:   .WORD   0           ;2 DUMMY WORDS
        .WORD   0
        .BYTE   0           ;3 * 20
        .BYTE   5
        .BYTE   3
        .BYTE   20
        .BYTE   0           ;4 * 5
        .BYTE   5  
        .BYTE   4
        .BYTE   15
        .BYTE   0           ;5 * 12
        .BYTE   5
        .BYTE   5
        .BYTE   12
        .BYTE   0           ;6 * 10
        .BYTE   5
        .BYTE   6
        .BYTE   10
        .PAGE

    ;THIS ROUTINE WILL SETUP PAGE 0.
    ;IT IS CALLED UPON STARTING PENTOMINOES
    ;AND IS NOT NEEDED AGAIN.

KSTART: LDA#    $EA         ;KLUDGE ENTRY TO "SETUP" PAGE 0
        STA     XSTART      ;NOP THE JMP TO THIS CODE
        STA     XSTART+1
        STA     XSTART+2
        LDY#    2           ;START WITH "CLEAR" PAGE 0
        LDA#    0
XSTA0:  STAY    0           ;ZERO ALL PAGE 0 UTILIZATION
        INY
        CPY#    ENDZER      ;UP TO THE END OF ZERO
        BNE     XSTA0
        LDA#    >PC01       ;NOW POKE THE "DATA" USED ON PAGE 0
        STA     PCPT+1
        LDA#    $06
        STA     RMAX
        LDA#    $0A
        STA     CMAX
        LDA#    $01
        STA     DELDEF
        JMP     START       ;NOW REALLY START

        .LINK   BIODEF      ;INCLUDE BIO ENTRY POINTS

        .END
